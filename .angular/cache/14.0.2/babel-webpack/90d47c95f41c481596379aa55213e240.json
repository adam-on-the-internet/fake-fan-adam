{"ast":null,"code":"import { NavigationEnd } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-markdown\";\nimport * as i4 from \"../loading/loading.component\";\n\nfunction MarkdownViewerComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"markdown\", 6);\n    i0.ɵɵelementStart(3, \"section\", 7);\n    i0.ɵɵelement(4, \"hr\");\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵelement(7, \"i\", 8);\n    i0.ɵɵtext(8, \" File Options \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\")(10, \"a\", 9);\n    i0.ɵɵtext(11, \" View Raw Text (in Markdown Format) \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"p\")(13, \"small\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.fullPath);\n    i0.ɵɵadvance(8);\n    i0.ɵɵattribute(\"href\", ctx_r0.fullPath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.fullPath, \" \");\n  }\n}\n\nfunction MarkdownViewerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading\");\n  }\n}\n\nexport let MarkdownViewerComponent = /*#__PURE__*/(() => {\n  class MarkdownViewerComponent {\n    constructor(route, router) {\n      this.route = route;\n      this.router = router;\n      this.rawPath = null;\n    }\n\n    get ready() {\n      return this.rawPath !== null;\n    }\n\n    get path() {\n      return this.rawPath.replace(/~/g, \"/\");\n    }\n\n    get fullPath() {\n      return `assets/${this.path}.md`;\n    }\n\n    ngOnInit() {\n      this.setPath();\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.setPath();\n        }\n      });\n    }\n\n    setPath() {\n      this.rawPath = this.route.snapshot.paramMap.get(\"path\");\n    }\n\n  }\n\n  MarkdownViewerComponent.ɵfac = function MarkdownViewerComponent_Factory(t) {\n    return new (t || MarkdownViewerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  MarkdownViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MarkdownViewerComponent,\n    selectors: [[\"app-markdown-viewer\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [1, \"my-3\"], [3, \"src\"], [\"id\", \"file-options\"], [1, \"fa\", \"fa-file\"], [\"target\", \"_blank\"]],\n    template: function MarkdownViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, MarkdownViewerComponent_ng_container_3_Template, 15, 3, \"ng-container\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(4, MarkdownViewerComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.ready)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MarkdownComponent, i4.LoadingComponent]\n  });\n  return MarkdownViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}