{"ast":null,"code":"import { RestUrlBuilder } from \"../utilities/rest-url-builder.util\";\nimport { CookieHelper } from \"../utilities/cookie.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst controller = \"bookmark\";\nexport let BookmarkService = /*#__PURE__*/(() => {\n  class BookmarkService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAll() {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller\n      });\n      return this.http.get(url, CookieHelper.authHeaders);\n    }\n\n    getSingle(id) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller,\n        params: id\n      });\n      return this.http.get(url, CookieHelper.authHeaders);\n    }\n\n    create(bookmark) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller\n      });\n      return this.http.post(url, bookmark, CookieHelper.authHeaders);\n    }\n\n    update(bookmark) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller\n      });\n      return this.http.put(url, bookmark, CookieHelper.authHeaders);\n    }\n\n    delete(id) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller,\n        params: id\n      });\n      return this.http.delete(url, CookieHelper.authHeaders);\n    }\n\n  }\n\n  BookmarkService.ɵfac = function BookmarkService_Factory(t) {\n    return new (t || BookmarkService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BookmarkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookmarkService,\n    factory: BookmarkService.ɵfac,\n    providedIn: \"root\"\n  });\n  return BookmarkService;\n})();","map":null,"metadata":{},"sourceType":"module"}