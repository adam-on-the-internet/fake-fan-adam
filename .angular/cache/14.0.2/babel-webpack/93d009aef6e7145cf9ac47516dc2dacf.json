{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nexport class CookieHelper {\n  static get unauthHeaders() {\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    return {\n      headers\n    };\n  }\n\n  static get bearerToken() {\n    return `Bearer ${CookieHelper.getToken()}`;\n  }\n\n  static get authHeaders() {\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\").set(\"Authorization\", CookieHelper.bearerToken);\n    return {\n      headers\n    };\n  }\n\n  static getToken() {\n    return localStorage.getItem(\"auth-token\");\n  }\n\n  static removeToken() {\n    window.localStorage.removeItem(\"auth-token\");\n  }\n\n  static saveToken(token) {\n    localStorage.setItem(\"auth-token\", token);\n  }\n\n  static getUserDetails() {\n    let payload;\n    const token = CookieHelper.getToken();\n\n    if (token) {\n      payload = token.split(\".\")[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  static get email() {\n    if (CookieHelper.isLoggedOn) {\n      return CookieHelper.getUserDetails().email;\n    } else {\n      return null;\n    }\n  }\n\n  static get admin() {\n    if (CookieHelper.isLoggedOn) {\n      return CookieHelper.getUserDetails().admin;\n    } else {\n      return null;\n    }\n  }\n\n  static get specialAccess() {\n    if (CookieHelper.isLoggedOn) {\n      return CookieHelper.getUserDetails().specialAccess;\n    } else {\n      return null;\n    }\n  }\n\n  static get isLoggedOn() {\n    const user = CookieHelper.getUserDetails();\n\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}