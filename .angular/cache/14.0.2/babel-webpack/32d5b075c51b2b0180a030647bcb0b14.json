{"ast":null,"code":"import { RestUrlBuilder } from \"../utilities/rest-url-builder.util\";\nimport { CookieHelper } from \"../utilities/cookie.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAllUsers() {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\"\n      });\n      return this.http.get(url, CookieHelper.authHeaders);\n    }\n\n    register(email) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"register\"\n      });\n      const user = {\n        email\n      };\n      return this.http.post(url, user);\n    }\n\n    updateEmailSelf(email) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"emailUpdate/self\"\n      });\n      const user = {\n        newEmail: email\n      };\n      return this.http.put(url, user, CookieHelper.authHeaders);\n    }\n\n    editAccess(email, specialAccess) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"specialAccess\"\n      });\n      const body = {\n        email,\n        specialAccess\n      };\n      return this.http.put(url, body, CookieHelper.authHeaders);\n    }\n\n    setAdmin(email, isAdmin) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"setAdmin\"\n      });\n      const body = {\n        email,\n        isAdmin\n      };\n      return this.http.put(url, body, CookieHelper.authHeaders);\n    }\n\n    resetPasswordAutomatic(email) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"passwordReset/automatic\"\n      });\n      const user = {\n        email\n      };\n      return this.http.put(url, user);\n    }\n\n    resetPasswordManual(password, confirmPassword) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: \"passwordReset/manual\"\n      });\n      const body = {\n        password,\n        confirmPassword\n      };\n      return this.http.put(url, body, CookieHelper.authHeaders);\n    }\n\n    deleteUser(id) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"user\",\n        collection: id\n      });\n      return this.http.delete(url, CookieHelper.authHeaders);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}