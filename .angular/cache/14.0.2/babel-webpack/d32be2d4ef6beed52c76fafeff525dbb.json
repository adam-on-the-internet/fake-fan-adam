{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { StringHelper } from \"../../utilities/string.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction SelectInputComponent_ng_container_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r2);\n  }\n}\n\nfunction SelectInputComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function SelectInputComponent_ng_container_0_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.value = $event);\n    })(\"change\", function SelectInputComponent_ng_container_0_Template_select_change_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onValueChange());\n    });\n    i0.ɵɵtemplate(5, SelectInputComponent_ng_container_0_ng_container_5_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", ctx_r0.valueName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.labelName, \": \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.value);\n    i0.ɵɵattribute(\"id\", ctx_r0.valueName)(\"name\", ctx_r0.valueName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n  }\n}\n\nexport let SelectInputComponent = /*#__PURE__*/(() => {\n  class SelectInputComponent {\n    constructor() {\n      this.valueName = \"value-name\";\n      this.options = null;\n      this.valueChange = new EventEmitter();\n    }\n\n    get labelName() {\n      return StringHelper.fromHtmlToLabel(this.valueName);\n    }\n\n    onValueChange() {\n      this.valueChange.emit(this.value);\n    }\n\n  }\n\n  SelectInputComponent.ɵfac = function SelectInputComponent_Factory(t) {\n    return new (t || SelectInputComponent)();\n  };\n\n  SelectInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectInputComponent,\n    selectors: [[\"app-select-input\"]],\n    inputs: {\n      valueName: \"valueName\",\n      value: \"value\",\n      options: \"options\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"form-group\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SelectInputComponent_ng_container_0_Template, 6, 6, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.valueName && ctx.options);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel]\n  });\n  return SelectInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}