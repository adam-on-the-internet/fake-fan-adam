{"ast":null,"code":"import { BooleanHelper } from \"src/app/utilities/boolean.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/log.service\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"src/app/services/nav-helper.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction LoginComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Failed to login. Check your email and password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_20_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r3, \" \");\n  }\n}\n\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"p\");\n    i0.ɵɵtext(2, \"Please correct the following errors:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, LoginComponent_div_20_li_4_Template, 2, 1, \"li\", 20);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.errors);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, logService, userService, navHelper) {\n      this.authService = authService;\n      this.logService = logService;\n      this.userService = userService;\n      this.navHelper = navHelper;\n      this.email = null;\n      this.password = null;\n      this.loginFailure = false;\n      this.showErrors = false;\n    }\n\n    get errors() {\n      const myErrors = [];\n\n      if (this.passwordInvalid) {\n        myErrors.push(\"Please provide a password.\");\n      }\n\n      if (this.emailInvalid) {\n        myErrors.push(\"Please provide an email.\");\n      }\n\n      return myErrors;\n    }\n\n    get valid() {\n      return this.errors.length === 0;\n    }\n\n    get emailInvalid() {\n      return !BooleanHelper.hasValue(this.email);\n    }\n\n    get passwordInvalid() {\n      return !BooleanHelper.hasValue(this.password);\n    }\n\n    submit() {\n      this.showErrors = true;\n\n      if (this.valid) {\n        this.login();\n      }\n    }\n\n    resetPassword() {\n      const emailToReset = prompt(\"What email do you want to reset the password for?\");\n\n      if (emailToReset) {\n        this.performReset(emailToReset);\n      }\n    }\n\n    startRegister() {\n      const registerEmail = prompt(\"What email would you like to register?\");\n\n      if (registerEmail) {\n        this.register(registerEmail);\n      }\n    }\n\n    performReset(emailToReset) {\n      let response;\n      this.userService.resetPasswordAutomatic(emailToReset).subscribe(res => response = res, error => {\n        console.log(\"reset failed\");\n      }, () => {\n        console.log(\"reset success\");\n      });\n    }\n\n    login() {\n      let response;\n      this.authService.login(this.email, this.password).subscribe(res => response = res, error => {\n        this.loginFailure = true;\n      }, () => {\n        this.logService.log(\"info\", \"Login: \" + this.email).subscribe();\n        this.navHelper.goToProfile();\n      });\n    }\n\n    register(email) {\n      let response;\n      this.userService.register(email).subscribe(res => response = res, error => {\n        console.log(\"register failed\");\n      }, () => {\n        this.navHelper.goToDashboard();\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.LogService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.NavHelperService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 31,\n    vars: 4,\n    consts: [[1, \"bg-off\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"my-3\", \"mx-auto\"], [1, \"card\", \"border-primary\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"fa\", \"fa-lock\"], [1, \"card-body\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"click\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"col-md-12\", \"mb-3\"], [1, \"alert\", \"alert-warning\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵelement(7, \"i\", 7);\n        i0.ɵɵtext(8, \" Account Login \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵtemplate(10, LoginComponent_p_10_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementStart(11, \"form\")(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 5, 1, \"div\", 15);\n        i0.ɵɵelementStart(21, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(22, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"hr\");\n        i0.ɵɵelementStart(24, \"p\")(25, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_25_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtext(26, \" Forgot password? Send reset email. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"p\")(28, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_28_listener() {\n          return ctx.startRegister();\n        });\n        i0.ɵɵtext(29, \" Register \");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(30, \"div\", 18);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginFailure);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrors && !ctx.valid);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}