{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/muppet.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../simple/loading/loading.component\";\nimport * as i5 from \"../muppet-info/muppet-info.component\";\n\nfunction MuppetDisplayComponent_app_muppet_info_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-muppet-info\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"muppet\", ctx_r0.muppet);\n  }\n}\n\nfunction MuppetDisplayComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"app-loading\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let MuppetDisplayComponent = /*#__PURE__*/(() => {\n  class MuppetDisplayComponent {\n    constructor(route, muppetService) {\n      this.route = route;\n      this.muppetService = muppetService;\n      this.muppet = null;\n      this.muppetId = null;\n    }\n\n    get ready() {\n      return this.muppetId !== null && this.muppet !== null;\n    }\n\n    ngOnInit() {\n      this.load();\n    }\n\n    load() {\n      this.muppetId = this.route.snapshot.paramMap.get(\"id\");\n      this.muppetService.getSingle(this.muppetId).subscribe(res => this.muppet = res, error => {\n        console.log(\"get single failed\");\n      });\n    }\n\n  }\n\n  MuppetDisplayComponent.ɵfac = function MuppetDisplayComponent_Factory(t) {\n    return new (t || MuppetDisplayComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MuppetService));\n  };\n\n  MuppetDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MuppetDisplayComponent,\n    selectors: [[\"app-muppet-display\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"bg-white\"], [1, \"container\"], [3, \"muppet\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"muppet\"], [1, \"row\"], [1, \"col-md-12\"]],\n    template: function MuppetDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MuppetDisplayComponent_app_muppet_info_2_Template, 1, 1, \"app-muppet-info\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, MuppetDisplayComponent_ng_template_3_Template, 3, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.ready)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i3.NgIf, i4.LoadingComponent, i5.MuppetInfoComponent]\n  });\n  return MuppetDisplayComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}