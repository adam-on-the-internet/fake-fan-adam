{"ast":null,"code":"import { RestUrlBuilder } from \"../utilities/rest-url-builder.util\";\nimport { CookieHelper } from \"../utilities/cookie.util\";\nimport { StringHelper } from \"../utilities/string.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TunnelGoonService = /*#__PURE__*/(() => {\n  class TunnelGoonService {\n    constructor(http) {\n      this.http = http;\n    } // TODO add \"ping\" endpoint '/ping/:id/:class/:bonus'\n    // class = brute skulker erudite\n    // bonus = health inventory\n\n\n    getAll() {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"tunnelGoons\"\n      });\n      return this.http.get(url, CookieHelper.authHeaders);\n    }\n\n    createOne(options = null) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"tunnelGoons\"\n      });\n      return this.http.post(url, options, CookieHelper.authHeaders);\n    }\n\n    deleteOne(id) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"tunnelGoons\",\n        collection: id\n      });\n      return this.http.delete(url, CookieHelper.authHeaders);\n    }\n\n    editOne(tunnelGoon) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"tunnelGoons\"\n      });\n      return this.http.put(url, tunnelGoon, CookieHelper.authHeaders);\n    }\n\n    getSingle(id) {\n      const url = RestUrlBuilder.buildRestUrl({\n        service: \"https://aoti-basic-express-app.herokuapp.com\"\n        /* BasicExpress */\n        ,\n        controller: \"tunnelGoons\",\n        collection: id\n      });\n      return this.http.get(url, CookieHelper.authHeaders);\n    }\n\n    static codifyPartyName(partyNameRaw) {\n      return partyNameRaw.toUpperCase().replace(/-/gi, \"_\").replace(/ /gi, \"_\");\n    }\n\n    static displayifyPartyName(partyName) {\n      const partyNameWithSpaces = partyName.replace(/-/gi, \" \").replace(/_/gi, \" \");\n      return StringHelper.toTitleCase(partyNameWithSpaces);\n    }\n\n  }\n\n  TunnelGoonService.ɵfac = function TunnelGoonService_Factory(t) {\n    return new (t || TunnelGoonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TunnelGoonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TunnelGoonService,\n    factory: TunnelGoonService.ɵfac,\n    providedIn: 'root'\n  });\n  return TunnelGoonService;\n})();","map":null,"metadata":{},"sourceType":"module"}