{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { StringHelper } from \"../../../../utilities/string.util\";\nimport { BooleanHelper } from \"../../../../utilities/boolean.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction NumberInputComponent_ng_container_0_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tip, \" \");\n  }\n}\n\nfunction NumberInputComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"section\", 1)(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, NumberInputComponent_ng_container_0_small_4_Template, 2, 1, \"small\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function NumberInputComponent_ng_container_0_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.value = $event);\n    })(\"change\", function NumberInputComponent_ng_container_0_Template_input_change_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onValueChange());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", ctx_r0.valueName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.labelName, \": \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.hasMinOrMax);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.value);\n    i0.ɵɵattribute(\"id\", ctx_r0.valueName)(\"name\", ctx_r0.valueName);\n  }\n}\n\nexport let NumberInputComponent = /*#__PURE__*/(() => {\n  class NumberInputComponent {\n    constructor() {\n      this.valueName = \"value-name\";\n      this.min = 0;\n      this.max = 10;\n      this.valueChange = new EventEmitter();\n    }\n\n    get hasMin() {\n      return BooleanHelper.hasValue(this.min);\n    }\n\n    get hasMax() {\n      return BooleanHelper.hasValue(this.max);\n    }\n\n    get hasMinOrMax() {\n      return this.hasMin || this.hasMax;\n    }\n\n    get hasMinAndMax() {\n      return this.hasMin && this.hasMax;\n    }\n\n    get tip() {\n      if (this.hasMinAndMax) {\n        return `(min ${this.min}, max ${this.max})`;\n      } else if (this.hasMin) {\n        return `(min ${this.min})`;\n      } else if (this.hasMax) {\n        return `(max ${this.max})`;\n      } else {\n        return \"\";\n      }\n    }\n\n    get labelName() {\n      return StringHelper.fromHtmlToLabel(this.valueName);\n    }\n\n    onValueChange() {\n      this.valueChange.emit(this.value);\n    }\n\n  }\n\n  NumberInputComponent.ɵfac = function NumberInputComponent_Factory(t) {\n    return new (t || NumberInputComponent)();\n  };\n\n  NumberInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NumberInputComponent,\n    selectors: [[\"app-number-input\"]],\n    inputs: {\n      valueName: \"valueName\",\n      min: \"min\",\n      max: \"max\",\n      value: \"value\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n    template: function NumberInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NumberInputComponent_ng_container_0_Template, 6, 6, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.valueName);\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel]\n  });\n  return NumberInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}